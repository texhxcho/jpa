buildscript {
	ext {
		querydslPluginVersion = '1.0.10'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }

	}
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.github.texhxcho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.16'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'junit:junit:4.12'
	implementation 'org.apache.commons:commons-lang3'

	// querydsl
	compile 'com.querydsl:querydsl-jpa'
	compile 'com.querydsl:querydsl-apt'
	compile 'com.querydsl:querydsl-core'

	// redis
	compile("org.springframework.boot:spring-boot-starter-data-redis")
	implementation 'org.apache.commons:commons-pool2'
}

test {
	useJUnitPlatform()
}

// querydsl 적용
apply plugin: 'com.ewerk.gradle.plugins.querydsl'
def querydslSrcDir = 'src/main/generated-sources'

querydsl {
	library = 'com.querydsl:querydsl-apt'
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileTestJava {
	options.annotationProcessorPath = configurations.querydsl
}
